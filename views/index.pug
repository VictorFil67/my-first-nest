doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title SuperBlog!
  body
    h1 Welcome to SuperBlog!
    // Конструкция "each" позволяет перебрать массив и для каждого элемента сгенерировать разметку
    ul
      each article in articles
        // #{...} — интерполяция. Так шаблонизатор понимает, что сюда надо встроить данные.
        li(id=`article-${article.id}`)
          | #{article.title}   
          a(href=`articles/${article.id}`)  Читать

          button(type="button" onclick=`deleteArticle(${article.id})`) Удалить       
          //- button(onclick=`deleteArticle(${article.id})`) Удалить
    a(href="articles/create") Создать   

    script.
      //- function deleteArticle(id) {
      //-   fetch(`articles/${id}`, { method: 'DELETE' })
      //-     .then(response => response.json())
      //-     .then(data => console.log(data))
      //-     .catch(error => console.error('Error:', error));
      //- }
      function deleteArticle(id) {
        fetch(`/articles/${id}`, {
          method: 'DELETE'
        })
        .then(response => {
          if (response.ok) {
            // Удаляем элемент статьи из DOM после успешного удаления
            const articleElement = document.getElementById(`article-${id}`);
            if (articleElement) {
              articleElement.remove();
            }
          } else {
            console.error('Не удалось удалить статью:', response.statusText);
          }
        })
        .catch(error => console.error('Ошибка удаления:', error));
      }